帧同步 ：
RTS（即时战略）游戏常采用的一种同步技术 。状态同步方式数据量会随着需要同步的单位数量增长，对于RTS游戏来讲动不动就是几百个的单位可以被操作，
如果每个单位的状态都需要同步的话，数据量是不能被接受的，所以帧同步不同步每个单位的状态，只同步玩家的操作指令，使用帧同步，一个玩家对几百个的单位操作时只同步一条操作指令，操作指令包含当前的桢索引。一般流程是客户端上传操作到服务器，服务器收到后并不计算游戏行为， 而是转发到所有客户端，客户端接受到操作以后，通过运算可以达到一致的状态，这样的情况下就算单位再多，他的同步量也不会随之增加。这里最重要的概念就是相同的输入 + 相同的时机 = 相同的输出。

实现帧同步的流程一般是：
1、同步随机数种子。(一般游戏中都设计随机数的使用， 通过同步随机数种子，可以保持随机数一致性)
2、客户端上传操作指令。(指令包括游戏操作和当前帧索引)
3、服务器广播所有客户端的操作。(如果没有操作， 也要广播空指令来驱动游戏帧前进)。

服务器的实现：服务器基于帧的概念，在每一帧内收集客户端发过来的操作，这一帧时间到就广播给所有客户端。（每隔一段时间（一帧）向所有客户端发送所有玩家操作）。即：收集操作—>发送操作—>收集操作—>发送操作......

客户端的实现：收到服务器的操作----》计算游戏逻辑----》上报下一帧的操作给服务器。因为所有客户端代码相同，并且每个客户端收到到的操作参数也相同，所以每个客户端计算结果也是相同的，从而达到同步。这样会导致一个问题：每一帧同步的玩家太多，服务器收集和发送的消息体积会很大。比如玩家数量为n的话，每一帧每个玩家操作a次，这一帧需要上传的操作有a*n次，玩一局游戏只有少数玩家的情况下，才使用帧同步，比如Moba：守望先锋，王者荣耀。

几千人的MMORPG---》状态同步

问题1：服务器的帧率设置为多少合适呢？

客户端是针对玩家眼睛感受，帧率为60FPS是看起来比较流畅的，服务器是面向玩家操作的反应时间，据科学研究，50ms~100ms是玩家的反应时间（一秒钟最多点击鼠标10次左右）,这样我们可以推算出服务器帧率设置为[10~20]FPS是比较流畅的——>15FPS，（王者荣耀采用15FPS）

估算一下，这样来做帧同步，服务器带宽能否承受：

1帧每个玩家内所产生的操作数据最多占：16B；王者荣耀有10个玩家 => 每个房间一秒钟向服务器发送的数据量为：16*10*15=2400B，

假设一台服务器有5000人在线（500个房间），那么这台服务器一秒钟收到的消息量为：500*2400B=1200000B=1.144M

估算MOBA类游戏一台服务器的消息传输速率最大为1.14M/S

问题2：使用TCP还是UDP？为什么？

帧同步使用UDP或TCP，状态同步使用TCP，UDP（无连接状态，不可靠，无序，效率高），TCP（面向连接，可靠，有序，效率差）

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
状态同步：

